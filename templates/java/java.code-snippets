{
	// Place your snippets for java here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// "Class Definition": {
	// "prefix": "class",
	// "body": [
	// 	"public class ${1:ClassName} {",
	// 	"\t${0}",
	// 	"}"
	// ],
	// "description": "Create a new class definition"
	// },
	"Print Statement": {
	"prefix": "print",
	"body": [
		"System.out.println(${1:\"text\"});"
	],
	"description": "Print statement"
	},
	"Getter and Setter": {
	"prefix": "gettersetter",
	"body": [
		"public ${1:Type} get${2:PropertyName}() {",
		"\treturn ${3:property};",
		"}",
		"",
		"public void set${2:PropertyName}(${1:Type} ${3:property}) {",
		"\tthis.${3:property} = ${3:property};",
		"}"
	],
	"description": "Create getter and setter methods"
	},
	// "For Loop": {
	// "prefix": "for",
	// "body": [
	// 	"for (int ${1:i} = 0; ${1:i} < ${2:count}; ${1:i}++) {",
	// 	"\t${0}",
	// 	"}"
	// ],
	// "description": "Create a for loop"
	// },
}